<?php

namespace jamesvweston\Stripe\Requests;


/**
 * Class CreateProductRequest
 * @see https://stripe.com/docs/api#create_service_product
 * @package jamesvweston\Stripe\Requests
 */
class CreateProductRequest implements \JsonSerializable
{

    /**
     * An identifier randomly generated by Stripe.
     * You can optionally override this ID, but the ID must be unique across all plans in your Stripe account.
     * You can, however, use the same plan ID in both live and test modes.
     * @var string|null
     */
    protected $id;

    /**
     * The productâ€™s name, meant to be displayable to the customer.
     * @var string
     */
    protected $name;

    /**
     * @var array|null
     */
    protected $metadata;

    /**
     * @var string|null
     */
    protected $statement_descriptor;


    /**
     * @return array
     */
    public function jsonSerialize()
    {
        $object['id']                       = $this->id;
        $object['name']                     = $this->name;
        $object['metadata']                 = $this->metadata;
        $object['statement_descriptor']     = $this->statement_descriptor;

        return $object;
    }

    /**
     * @return null|string
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * @param null|string $id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * @return string
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * @param string $name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * @return array|null
     */
    public function getMetadata(): ?array
    {
        return $this->metadata;
    }

    /**
     * @param array|null $metadata
     */
    public function setMetadata(?array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * @return null|string
     */
    public function getStatementDescriptor(): ?string
    {
        return $this->statement_descriptor;
    }

    /**
     * @param null|string $statement_descriptor
     */
    public function setStatementDescriptor(?string $statement_descriptor): void
    {
        $this->statement_descriptor = $statement_descriptor;
    }

}